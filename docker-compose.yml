services:
  nestjs-boilerplate-api:
    image: nestjs-boilerplate-api
    container_name: nestjs-boilerplate-api
    restart: always
    build:
      context: .
    env_file:
      - .env.docker
    ports:
      - '3000:3000'
    networks:
      - nestjs-boilerplate-network

  db:
    image: postgres:16
    container_name: nestjs-boilerplate-postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: nestjs_boilerplate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: 'UTC'
    ports:
      - '5432:5432'
    networks:
      - nestjs-boilerplate-network

  redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
    environment:
      REDIS_ARGS: '--requirepass redispass'
    networks:
      - nestjs-boilerplate-network

  maildev:
    image: maildev/maildev:latest
    ports:
      - '1080:1080'
      - '1025:1025'
    networks:
      - nestjs-boilerplate-network

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:

networks:
  nestjs-boilerplate-network:
    driver: bridge